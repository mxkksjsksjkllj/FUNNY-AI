from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
import random

# Bot token and Admin ID
BOT_TOKEN = "7828379731:AAEMbd6RWe1iLV2SZRh3l6Cz6OC5Vm1BExQ"
ADMIN_ID = 1786683163

# /start command
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("рд╣реИрд▓реЛ! ЁЯШК рдореИрдВ рд╣реВрдБ рдЖрдкрдХрд╛ рдордЬреЗрджрд╛рд░ рдмреЙрдЯ! рдмрд╛рдд рдХрд░реЛ, рд╢рд╛рдпрд░реА рдорд╛рдВрдЧреЛ, рдпрд╛ рдмрд╕ рдорд╕реНрддреА рдХрд░реЛ! ЁЯШД")

# Broadcasting messages (Admin only)
async def broadcast(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id == ADMIN_ID:
        message = " ".join(context.args)
        if message:
            await update.message.reply_text("рдЖрдкрдХрд╛ рд╕рдВрджреЗрд╢ рдмреНрд░реЙрдбрдХрд╛рд╕реНрдЯ рд╣реЛ рд░рд╣рд╛ рд╣реИ...")
        else:
            await update.message.reply_text("рдХреГрдкрдпрд╛ рдХреЛрдИ рд╕рдВрджреЗрд╢ рджреЗрдВ рдЬрд┐рд╕реЗ рдмреНрд░реЙрдбрдХрд╛рд╕реНрдЯ рдХрд┐рдпрд╛ рдЬрд╛ рд╕рдХреЗред")
    else:
        await update.message.reply_text("рдЖрдкрдХреЛ рдЗрд╕ рдХрдорд╛рдВрдб рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреА рдЕрдиреБрдорддрд┐ рдирд╣реАрдВ рд╣реИред")

# Funny chat response function with emoji and human-like behavior
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text.lower()

    # If user asks for a joke
    if "joke" in user_message or "рдЬреЛрдХрд░" in user_message:
        jokes = [
            "рдХреНрдпреЛрдВ рд╣рдбреНрдбреА рд╡рд╛рд▓реЗ рдПрдХ-рджреВрд╕рд░реЗ рд╕реЗ рдирд╣реАрдВ рд▓рдбрд╝рддреЗ? рдХреНрдпреЛрдВрдХрд┐ рдЙрдирдХреЗ рдкрд╛рд╕ рд╣рд┐рдореНрдордд рдирд╣реАрдВ рд╣реЛрддреА! ЁЯШВ",
            "рдореИрдВрдиреЗ рдЕрдкрдиреЗ рдХрдВрдкреНрдпреВрдЯрд░ рд╕реЗ рдХрд╣рд╛ рдХрд┐ рдореБрдЭреЗ рдмреНрд░реЗрдХ рдЪрд╛рд╣рд┐рдП, рдЕрдм рд╡реЛ рдореБрдЭреЗ рд▓рдЧрд╛рддрд╛рд░ Kit-Kat рднреЗрдЬ рд░рд╣рд╛ рд╣реИ! ЁЯНлЁЯШЖ",
            "рдХреНрдпреЛрдВ рд░реЛрдмреЛрдЯреНрд╕ рдХрднреА рдШрдмрд░рд╛рддреЗ рдирд╣реАрдВ? рдЙрдирдХреЗ рдкрд╛рд╕ рд╕реНрдЯреАрд▓ рдХреА рдирд╕реЗрдВ рд╣реЛрддреА рд╣реИрдВ! ЁЯдЦЁЯТк"
        ]
        await update.message.reply_text(random.choice(jokes))
    
    # If user asks for a shayari
    elif "shayari" in user_message or "рд╢рд╛рдпрд░реА" in user_message:
        shayaris = [
            "рдЪрд╛рдБрдж рдХреА рдЪрд╛рдБрджрдиреА, рд╕реВрд░рдЬ рдХреА рд░реМрд╢рдиреА, рдЦреБрджрд╛ рдХреА рдирд┐рдпрдд, рд╣рдорд╛рд░реА рдореЛрд╣рдмреНрдмрдд рдХреА рд╕рдЪреНрдЪрд╛рдИ! ЁЯМЩЁЯТЦ",
            "рджрд┐рд▓ рдХреА рд╣рд░ рдПрдХ рдмрд╛рдд рддреБрдорд╕реЗ рдХрд╣рдиреЗ рдХрд╛ рдорди рдХрд░рддрд╛ рд╣реИ, рдореЗрд░реА рд╢рд╛рдпрд░реА рднреА рддреБрдорд╕реЗ рдорд┐рд▓рдиреЗ рдХрд╛ рдорди рдХрд░рддрд╛ рд╣реИ! ЁЯШШ",
            "рдЬрд┐рдиреНрджрдЧреА рдХреЗ рд╕рдлрд░ рдореЗрдВ рддреБрдо рд╣реЛ рд╕рд╛рде, рддреЛ рд╣рд░ рджрд░реНрдж рднреА рд▓рдЧрддрд╛ рд╣реИ рдЖрд╕рд╛рди! ЁЯМ╕ЁЯТл"
        ]
        await update.message.reply_text(random.choice(shayaris))
    
    # If user is bored or feeling down
    elif "bored" in user_message or "рдмреЛрд░" in user_message:
        questions = [
            "рдЕрд░реЗ! рдмреЛрд░ рдХреНрдпреЛрдВ рд╣реЛ рд░рд╣реЗ рд╣реЛ? ЁЯШХ рдХреНрдпрд╛ рдХреБрдЫ рдирдпрд╛ рдЯреНрд░рд╛рдИ рдХрд░рдирд╛ рдЪрд╛рд╣реЛрдЧреЗ? ЁЯОоЁЯОи",
            "рдЕрдЧрд░ рдмреЛрд░ рд╣реЛ рддреЛ рдмрддрд╛рдУ, рдХреЛрдИ рдордЬреЗрджрд╛рд░ рдЦреЗрд▓ рдЦреЗрд▓рддреЗ рд╣реИрдВ! ЁЯОЙЁЯЩВ",
            "рдХрднреА рд╕реЛрдЪрд╛ рд╣реИ рдХрд┐ рддреБрдореНрд╣рд╛рд░реА рдкрд╕рдВрджреАрджрд╛ рдЪреАрдЬрд╝ рдХреНрдпрд╛ рд╣реИ? ЁЯШГЁЯНХ"
        ]
        await update.message.reply_text(random.choice(questions))

    # General conversation with emojis
    else:
        responses = [
            "рдореИрдВ рдмреЙрдЯ рд╣реВрдВ, рд▓реЗрдХрд┐рди рджрд┐рд▓ рд╕реЗ рдмрд╛рдд рдХрд░рддрд╛ рд╣реВрдВ! ЁЯШО",
            "рдХреНрдпрд╛ рд╣рд╛рд▓ рд╣реИ рднрд╛рдИ? ЁЯШК рдореБрдЭреЗ рдмрддрд╛рдУ, рдХреИрд╕реЗ рд╣реЛ? ЁЯлг",
            "рдХреНрдпрд╛ рддреБрдордиреЗ рдЖрдЬ рдХреБрдЫ рдирдпрд╛ рд╕реАрдЦрд╛? ЁЯдФ рдпрд╛ рдлрд┐рд░ рдмрд╕ рдорд╕реНрддреА рдХреА? ЁЯШЬ"
        ]
        await update.message.reply_text(random.choice(responses))

# Main function to start the bot
def main():
    app = Application.builder().token(BOT_TOKEN).build()

    # Add command and message handlers
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("broadcast", broadcast))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # Run the bot
    app.run_polling()

if __name__ == "__main__":
    main()
  
